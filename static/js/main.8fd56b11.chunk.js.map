{"version":3,"sources":["songs/Give Me Some Sunshine.mp3","images/music.jpg","components/Player.jsx","App.js","reportWebVitals.js","index.js"],"names":["Player","useEffect","music_path","document","getElementById","onclick","e","clientWidth","offsetWidth","offsetX","style","width","audio","duration","currentTime","useState","musiccurrenttime","setmusiccurrenttime","musicDuration","setmusicDuration","React","selected","setSelected","secondSelect","setsecondSelect","fontSize","icnname","icon","seticon","className","src","musicImg","alt","onClick","target","color","ToggleButton","value","border","onChange","props","play","pause","darubadnam","id","onTimeUpdate","nativeEvent","srcElement","minit","Math","floor","second","onCanPlay","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8fd56b11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Give Me Some Sunshine.13ab4d18.mp3\";","export default __webpack_public_path__ + \"static/media/music.4e27ef9a.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport darubadnam from \"../songs/Give Me Some Sunshine.mp3\";\r\nimport musicImg from \"../images/music.jpg\";\r\nconst Player = () => {\r\n  // playPause\r\n\r\n  const playPause = () => {\r\n    let audio = document.getElementById(\"audio_id\");\r\n\r\n    if (icon.props.icnname === \"PlayArrowIcon\") {\r\n      audio.play();\r\n      seticon(<PauseIcon style={{ fontSize: 80 }} icnname=\"PauseIcon\" />);\r\n    } else {\r\n      seticon(\r\n        <PlayArrowIcon style={{ fontSize: 80 }} icnname=\"PlayArrowIcon\" />\r\n      );\r\n      audio.pause();\r\n    }\r\n  };\r\n  // playPause end\r\n\r\n  // music duration check\r\n  const durationCheck = (e) => {\r\n    let { duration } = e.nativeEvent.srcElement;\r\n    let minit = Math.floor(duration / 60);\r\n    let second = Math.floor(duration % 60);\r\n    if (minit < 10) {\r\n      minit = `0${minit}`;\r\n    }\r\n    if (second < 10) {\r\n      second = `0${second}`;\r\n    }\r\n    setmusicDuration(`${minit}:${second}`);\r\n  };\r\n\r\n  // music duration check end\r\n\r\n  // music time update\r\n\r\n  const timeUpdate = (e) => {\r\n    let { currentTime, duration } = e.nativeEvent.srcElement;\r\n    let width = (currentTime / duration) * 100;\r\n    let progress = document.getElementById(\"progress\");\r\n    progress.style.width = width + \"%\";\r\n    let minit = Math.floor(currentTime / 60);\r\n    let second = Math.floor(currentTime % 60);\r\n    if (minit < 10) {\r\n      minit = `0${minit}`;\r\n    }\r\n    if (second < 10) {\r\n      second = `0${second}`;\r\n    }\r\n    setmusiccurrenttime(`${minit}:${second}`);\r\n  };\r\n\r\n  // music time update end\r\n\r\n  // music fast Forward\r\n\r\n  useEffect(() => {\r\n    const music_path = document.getElementById(\"progrss_path\");\r\n    music_path.onclick = (e) => {\r\n      const clientWidth = music_path.offsetWidth;\r\n      const { offsetX } = e;\r\n      document.getElementById(\"progress\").style.width =\r\n        (offsetX / clientWidth) * 100 + \"%\";\r\n      let audio = document.getElementById(\"audio_id\");\r\n      const { duration } = audio;\r\n      audio.currentTime = (offsetX / clientWidth) * duration;\r\n    };\r\n  }, []);\r\n\r\n  // music fast Forward end\r\n\r\n  const [musiccurrenttime, setmusiccurrenttime] = useState(\"00:00\");\r\n  const [musicDuration, setmusicDuration] = useState(\"00:00\");\r\n  const [selected, setSelected] = React.useState(false);\r\n  const [secondSelect, setsecondSelect] = useState(false);\r\n  const [icon, seticon] = useState(\r\n    <PlayArrowIcon style={{ fontSize: 80 }} icnname=\"PlayArrowIcon\" />\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 w-full h-screen flex items-center\">\r\n      <div\r\n        className=\"lg:w-1/2 h-96\r\n       rounded-lg shadow-2xl bg-red-100 mx-auto\"\r\n      >\r\n        <div className=\"h-3/4 flex\">\r\n          <div className=\"w-1/3 h-full bg-gray-100 rounded-tl-lg\">\r\n            <img\r\n              src={musicImg}\r\n              className=\"object-cover h-full w-64\"\r\n              alt=\"Music img\"\r\n            />\r\n          </div>\r\n          <div className=\"w-2/3 h-full\">\r\n            <div className=\"w-full h-1/3 bg-white flex items-center\">\r\n              <div className=\"mx-auto\">\r\n                <h1 className=\"text-3xl text-gray-800 font-light\">\r\n                  give me some sunshine\r\n                </h1>\r\n                <strong className=\"text-gray-400 text-lg font-extralight\">\r\n                  3 idiots\r\n                </strong>\r\n              </div>\r\n              <div className=\"mx-auto\">\r\n                <FavoriteBorderIcon\r\n                  className=\"text-gray-400 cursor-pointer\"\r\n                  fontSize=\"large\"\r\n                  onClick={(e) =>\r\n                    (e.target.style.color = \"rgba(248, 113, 113)\")\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\" h-2/3 bg-white grid place-items-center\">\r\n              <div className=\"w-3/4 flex items-center h-full\">\r\n                <ToggleButton\r\n                  value=\"check\"\r\n                  className=\"focus:outline-none\"\r\n                  style={{ border: 0 }}\r\n                  selected={selected}\r\n                  onChange={() => {\r\n                    setSelected(!selected);\r\n                  }}\r\n                >\r\n                  <ShuffleIcon style={{ fontSize: 40 }} />\r\n                </ToggleButton>\r\n                <button className=\"mx-auto\">\r\n                  <SkipPreviousIcon style={{ fontSize: 40 }} />\r\n                </button>\r\n\r\n                <button className=\"focus:outline-none\" onClick={playPause}>\r\n                  <div className=\"w-28 h-28 rounded-full shadow-lg items-center grid place-items-center bg-yellow-500 \">\r\n                    <audio\r\n                      src={darubadnam}\r\n                      id=\"audio_id\"\r\n                      onTimeUpdate={timeUpdate}\r\n                      onCanPlay={durationCheck}\r\n                    ></audio>\r\n                    {icon}\r\n                  </div>\r\n                </button>\r\n                <button className=\"mx-auto\">\r\n                  <SkipNextIcon style={{ fontSize: 40 }} />\r\n                </button>\r\n                <ToggleButton\r\n                  value=\"check\"\r\n                  className=\"focus:outline-none\"\r\n                  style={{ border: 0 }}\r\n                  selected={secondSelect}\r\n                  onChange={() => {\r\n                    setsecondSelect(!secondSelect);\r\n                  }}\r\n                >\r\n                  <RepeatIcon style={{ fontSize: 40 }} />\r\n                </ToggleButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"mt-5 w-full flex justify-between\">\r\n            <span className=\"pl-5\">\r\n              <strong>{musiccurrenttime}</strong>\r\n            </span>\r\n            <span className=\"pr-5\">\r\n              <strong>{musicDuration}</strong>\r\n            </span>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <div\r\n              className=\"h-1 bg-gray-400 mx-5 rounded-full cursor-pointer\"\r\n              id=\"progrss_path\"\r\n            >\r\n              <div\r\n                className=\"w-0 h-1 bg-red-600 rounded-full relative\"\r\n                id=\"progress\"\r\n              >\r\n                {/* <span\r\n                  draggable=\"true\"\r\n                  className=\"w-4 h-4 bg-red-600 absolute -top-1.5 rounded-full\"\r\n                ></span> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import Player from \"./components/Player\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Player />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}